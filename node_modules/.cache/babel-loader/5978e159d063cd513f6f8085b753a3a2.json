{"ast":null,"code":"var _jsxFileName = \"/Users/nikitastolarov/Desktop/my-app/src/App.jsx\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [notes, getNotes] = useState([1, 2, 3]); //   const map = notes.map((elem, index) => {\n  //       return <p key = {index}>{elem}</p>\n  //   })\n\n  const copy = Object.assign([], notes);\n  copy[1] = \"!\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => getNotes(copy),\n      children: \"\\u043F\\u0438\\u0441\\u044C\\u043A\\u0430\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: notes\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 10\n  }, this);\n}\n\n_s(App, \"yZHvhDy0AdfCa7yeJ4lAYa+cV3E=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/nikitastolarov/Desktop/my-app/src/App.jsx"],"names":["React","useState","App","notes","getNotes","copy","Object","assign"],"mappings":";;;AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAGA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAK,CAACC,KAAD,EAAQC,QAAR,IAAoBH,QAAQ,CAAC,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAD,CAAjC,CADa,CAEf;AACA;AACA;;AACE,QAAMI,IAAI,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,CAAb;AACAE,EAAAA,IAAI,CAAC,CAAD,CAAJ,GAAU,GAAV;AAIA,sBAAO;AAAA,4BACH;AAAQ,MAAA,OAAO,EAAI,MAAMD,QAAQ,CAACC,IAAD,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADG,eAEH;AAAA,gBAAIF;AAAJ;AAAA;AAAA;AAAA;AAAA,YAFG;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAKD;;GAfQD,G;;KAAAA,G;AAgBT,eAAeA,GAAf","sourcesContent":["import './App.css';\nimport React, { useState } from 'react';\n\n\nfunction App() {\n  const[notes, getNotes] = useState([1, 2, 3]);\n//   const map = notes.map((elem, index) => {\n//       return <p key = {index}>{elem}</p>\n//   })\n  const copy = Object.assign([], notes);\n  copy[1] = \"!\"\n  \n\n\n  return <div>\n      <button onClick = {() => getNotes(copy)}>писька</button>\n      <p>{notes}</p>\n      {/* {map} */}\n  </div>\n}\nexport default App; \n\n      "]},"metadata":{},"sourceType":"module"}