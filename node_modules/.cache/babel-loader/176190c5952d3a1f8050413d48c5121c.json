{"ast":null,"code":"var _jsxFileName = \"/Users/nikitastolarov/Desktop/my-app/src/App.jsx\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  //     const [notes, setNotes] = useState([2, 4, 3]);\n  //     const map = notes.map((elem) => {\n  //        return <input value = {elem} onChange = {(event) => setNotes(event.target.value)}/>\n  //     })\n  //    function sum (arr) {\n  //        let result = 0;\n  //        for ( let elem of arr) {\n  //            result += elem;\n  //        }\n  //        return result;\n  //    }\n  //    return <div>\n  //        {map}\n  //        <div>{sum(notes)}</div>\n  //    </div>\n  const [notes, setNotes] = useState([1, 2, 3]);\n\n  function changeHandler(index, event) {\n    setNotes([...notes.slice(0, index), event.target.value, ...notes.slice(index + 1)]);\n  }\n\n  const result = notes.map((note, index) => {\n    return /*#__PURE__*/_jsxDEV(\"input\", {\n      value: note,\n      onChange: event => changeHandler(index, event)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 12\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [result, getSum(notes)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 8\n  }, this);\n}\n\n_s(App, \"IBNCcK+KC9YcgojM5ewWYO22CdQ=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/nikitastolarov/Desktop/my-app/src/App.jsx"],"names":["React","useState","App","notes","setNotes","changeHandler","index","event","slice","target","value","result","map","note","getSum"],"mappings":";;;AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAGA,SAASC,GAAT,GAAe;AAAA;;AACf;AAGA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAGA;AAEA;AACA;AACA;AACA;AAEA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBH,QAAQ,CAAC,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAD,CAAlC;;AAEA,WAASI,aAAT,CAAuBC,KAAvB,EAA8BC,KAA9B,EAAqC;AACjCH,IAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAK,CAACK,KAAN,CAAY,CAAZ,EAAeF,KAAf,CAAJ,EAA2BC,KAAK,CAACE,MAAN,CAAaC,KAAxC,EAA+C,GAAGP,KAAK,CAACK,KAAN,CAAYF,KAAK,GAAG,CAApB,CAAlD,CAAD,CAAR;AACH;;AAED,QAAMK,MAAM,GAAGR,KAAK,CAACS,GAAN,CAAU,CAACC,IAAD,EAAOP,KAAP,KAAiB;AACtC,wBAAO;AAEH,MAAA,KAAK,EAAEO,IAFJ;AAGH,MAAA,QAAQ,EAAEN,KAAK,IAAIF,aAAa,CAACC,KAAD,EAAQC,KAAR;AAH7B,OACED,KADF;AAAA;AAAA;AAAA;AAAA,YAAP;AAKH,GANc,CAAf;AAQA,sBAAO;AAAA,eACFK,MADE,EAEFG,MAAM,CAACX,KAAD,CAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAIC;;GA1CQD,G;;KAAAA,G;AA2CT,eAAeA,GAAf","sourcesContent":["import './App.css';\nimport React, { useState } from 'react';\n\n\nfunction App() {\n//     const [notes, setNotes] = useState([2, 4, 3]);\n   \n\n//     const map = notes.map((elem) => {\n//        return <input value = {elem} onChange = {(event) => setNotes(event.target.value)}/>\n//     })\n\n//    function sum (arr) {\n//        let result = 0;\n       \n//        for ( let elem of arr) {\n//            result += elem;\n//        }\n//        return result;\n       \n\n//    }\n\n//    return <div>\n//        {map}\n//        <div>{sum(notes)}</div>\n//    </div>\n\nconst [notes, setNotes] = useState([1, 2, 3]);\n\t\nfunction changeHandler(index, event) {\n    setNotes([...notes.slice(0, index), event.target.value, ...notes.slice(index + 1)]);\n}\n\nconst result = notes.map((note, index) => {\n    return <input\n        key={index}\n        value={note}\n        onChange={event => changeHandler(index, event)}\n    />;\n});\n\nreturn <div>\n    {result}\n    {getSum(notes)}\n</div>;\n}\nexport default App; \n\n\n\n"]},"metadata":{},"sourceType":"module"}