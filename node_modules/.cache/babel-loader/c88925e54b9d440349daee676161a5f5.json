{"ast":null,"code":"var _jsxFileName = \"/Users/nikitastolarov/Desktop/my-app/src/App.jsx\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initNotes = [{\n  id: id(),\n  name: 'name1',\n  desc: 'long description 1'\n}, {\n  id: id(),\n  name: 'name2',\n  desc: 'long description 2'\n}, {\n  id: id(),\n  name: 'name3',\n  desc: 'long description 3'\n}];\n\nfunction App() {\n  _s();\n\n  const [notes, setNotes] = useState(initNotes);\n\n  function showDesc(id) {\n    setNotes(notes.map(note => {\n      if (note.id === id) {\n        return { ...note,\n          show: !note.show\n        };\n      } else {\n        return note;\n      }\n    }));\n  }\n\n  const result = notes.map(note => {\n    let desc;\n\n    if (note.show) {\n      desc = /*#__PURE__*/_jsxDEV(\"i\", {\n        children: note.desc\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [note.name, /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => showDesc(note.id),\n        children: \"show\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 4\n      }, this), desc]\n    }, note.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 10\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: result\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"a19zpSKz3nme9rytGYr1Gca6MLc=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/nikitastolarov/Desktop/my-app/src/App.jsx"],"names":["React","useState","initNotes","id","name","desc","App","notes","setNotes","showDesc","map","note","show","result"],"mappings":";;;AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,MAAMC,SAAS,GAAG,CACjB;AACCC,EAAAA,EAAE,EAAEA,EAAE,EADP;AAECC,EAAAA,IAAI,EAAE,OAFP;AAGCC,EAAAA,IAAI,EAAE;AAHP,CADiB,EAMjB;AACCF,EAAAA,EAAE,EAAEA,EAAE,EADP;AAECC,EAAAA,IAAI,EAAE,OAFP;AAGCC,EAAAA,IAAI,EAAE;AAHP,CANiB,EAWjB;AACCF,EAAAA,EAAE,EAAEA,EAAE,EADP;AAECC,EAAAA,IAAI,EAAE,OAFP;AAGCC,EAAAA,IAAI,EAAE;AAHP,CAXiB,CAAlB;;AAkBA,SAASC,GAAT,GAAe;AAAA;;AACX,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAACC,SAAD,CAAlC;;AAEH,WAASO,QAAT,CAAkBN,EAAlB,EAAsB;AACrBK,IAAAA,QAAQ,CAACD,KAAK,CAACG,GAAN,CAAUC,IAAI,IAAI;AAC1B,UAAIA,IAAI,CAACR,EAAL,KAAYA,EAAhB,EAAoB;AACnB,eAAO,EAAC,GAAGQ,IAAJ;AAAUC,UAAAA,IAAI,EAAE,CAACD,IAAI,CAACC;AAAtB,SAAP;AACA,OAFD,MAEO;AACN,eAAOD,IAAP;AACA;AACD,KANQ,CAAD,CAAR;AAOA;;AAED,QAAME,MAAM,GAAGN,KAAK,CAACG,GAAN,CAAUC,IAAI,IAAI;AAChC,QAAIN,IAAJ;;AACA,QAAIM,IAAI,CAACC,IAAT,EAAe;AACdP,MAAAA,IAAI,gBAAG;AAAA,kBAAIM,IAAI,CAACN;AAAT;AAAA;AAAA;AAAA;AAAA,cAAP;AACA;;AAED,wBAAO;AAAA,iBACLM,IAAI,CAACP,IADA,eAEN;AAAQ,QAAA,OAAO,EAAE,MAAMK,QAAQ,CAACE,IAAI,CAACR,EAAN,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFM,EAGLE,IAHK;AAAA,OAAQM,IAAI,CAACR,EAAb;AAAA;AAAA;AAAA;AAAA,YAAP;AAKA,GAXc,CAAf;AAaA,sBAAO;AAAA,cACLU;AADK;AAAA;AAAA;AAAA;AAAA,UAAP;AAIA;;GA9BQP,G;;KAAAA,G;AAgCT,eAAeA,GAAf","sourcesContent":["import './App.css';\nimport React, { useState } from 'react';\n\nconst initNotes = [\n\t{\n\t\tid: id(),\n\t\tname: 'name1',\n\t\tdesc: 'long description 1'\n\t},\n\t{\n\t\tid: id(),\n\t\tname: 'name2',\n\t\tdesc: 'long description 2'\n\t},\n\t{\n\t\tid: id(),\n\t\tname: 'name3',\n\t\tdesc: 'long description 3'\n\t},\n];\n\nfunction App() {\n    const [notes, setNotes] = useState(initNotes);\n\t\n\tfunction showDesc(id) {\n\t\tsetNotes(notes.map(note => {\n\t\t\tif (note.id === id) {\n\t\t\t\treturn {...note, show: !note.show};\n\t\t\t} else {\n\t\t\t\treturn note;\n\t\t\t}\n\t\t}));\n\t}\n\t\n\tconst result = notes.map(note => {\n\t\tlet desc;\n\t\tif (note.show) {\n\t\t\tdesc = <i>{note.desc}</i>;\n\t\t}\n\t\t\n\t\treturn <p key={note.id}>\n\t\t\t{note.name}\n\t\t\t<button onClick={() => showDesc(note.id)}>show</button>\n\t\t\t{desc}\n\t\t</p>;\n\t});\n\t\n\treturn <div>\n\t\t{result}\n\t</div>;\n\n}\n\nexport default App; \n\n\n"]},"metadata":{},"sourceType":"module"}