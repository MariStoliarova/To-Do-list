{"ast":null,"code":"var _jsxFileName = \"/Users/nikitastolarov/Desktop/my-app/src/App.jsx\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport uuid from \"react-uuid\";\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initProds = [{\n  id: uuid(),\n  name: 'prod1',\n  cost: 'cost1',\n  desc: 'long description 1',\n  comm: 'my super comment 1'\n}, {\n  id: uuid(),\n  name: 'prod2',\n  cost: 'cost2',\n  desc: 'long description 2',\n  comm: 'my super comment 2'\n}, {\n  id: uuid(),\n  name: 'prod3',\n  cost: 'cost3',\n  desc: 'long description 3',\n  comm: 'my super comment 3'\n}];\n\nfunction App() {\n  _s();\n\n  const [notes, setNotes] = useState(initProds);\n  const [value, setValue] = useState(false);\n  const result = notes.map(elem => {\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [elem.name, elem.cost, value ? \"elem.desc\" : \"\", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setValue(!value),\n        children: \"\\u043E\\u043F\\u0438\\u0441\\u0430\\u043D\\u0438\\u0435\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"\\u043E\\u0442\\u0437\\u044B\\u0432\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 16\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: result\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 12\n  }, this);\n}\n\n_s(App, \"Q0iEbzLYeSJWD+jIH7IyZ4qjrY8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/nikitastolarov/Desktop/my-app/src/App.jsx"],"names":["uuid","React","useState","initProds","id","name","cost","desc","comm","App","notes","setNotes","value","setValue","result","map","elem"],"mappings":";;;AAAA,OAAO,WAAP;AACA,OAAOA,IAAP,MAAiB,YAAjB;AAEA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,MAAMC,SAAS,GAAG,CACjB;AACCC,EAAAA,EAAE,EAAEJ,IAAI,EADT;AAECK,EAAAA,IAAI,EAAE,OAFP;AAGCC,EAAAA,IAAI,EAAE,OAHP;AAICC,EAAAA,IAAI,EAAE,oBAJP;AAKCC,EAAAA,IAAI,EAAE;AALP,CADiB,EAQjB;AACCJ,EAAAA,EAAE,EAAEJ,IAAI,EADT;AAECK,EAAAA,IAAI,EAAE,OAFP;AAGCC,EAAAA,IAAI,EAAE,OAHP;AAICC,EAAAA,IAAI,EAAE,oBAJP;AAKCC,EAAAA,IAAI,EAAE;AALP,CARiB,EAejB;AACCJ,EAAAA,EAAE,EAAEJ,IAAI,EADT;AAECK,EAAAA,IAAI,EAAE,OAFP;AAGCC,EAAAA,IAAI,EAAE,OAHP;AAICC,EAAAA,IAAI,EAAE,oBAJP;AAKCC,EAAAA,IAAI,EAAE;AALP,CAfiB,CAAlB;;AAwBA,SAASC,GAAT,GAAe;AAAA;;AACX,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAACC,SAAD,CAAlC;AACA,QAAK,CAACS,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,KAAD,CAAjC;AAKA,QAAMY,MAAM,GAAGJ,KAAK,CAACK,GAAN,CAAWC,IAAD,IAAU;AAI/B,wBAAO;AAAA,iBACFA,IAAI,CAACX,IADH,EAEFW,IAAI,CAACV,IAFH,EAGFM,KAAK,GAAE,WAAF,GAAe,EAHlB,eAMH;AAAQ,QAAA,OAAO,EAAI,MAAMC,QAAQ,CAAC,CAACD,KAAF,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANG,eAOH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPG;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AASH,GAbc,CAAf;AAeA,sBAAO;AAAA,2BACH;AAAA,gBACQE;AADR;AAAA;AAAA;AAAA;AAAA;AADG;AAAA;AAAA;AAAA;AAAA,UAAP;AAQH;;GA9BQL,G;;KAAAA,G;AAgCT,eAAeA,GAAf","sourcesContent":["import './App.css';\nimport uuid from \"react-uuid\";\n\nimport React, { useState } from 'react';\n\nconst initProds = [\n\t{\n\t\tid: uuid(),\n\t\tname: 'prod1',\n\t\tcost: 'cost1',\n\t\tdesc: 'long description 1',\n\t\tcomm: 'my super comment 1'\n\t},\n\t{\n\t\tid: uuid(),\n\t\tname: 'prod2',\n\t\tcost: 'cost2',\n\t\tdesc: 'long description 2',\n\t\tcomm: 'my super comment 2'\n\t},\n\t{\n\t\tid: uuid(),\n\t\tname: 'prod3',\n\t\tcost: 'cost3',\n\t\tdesc: 'long description 3',\n\t\tcomm: 'my super comment 3'\n\t},\n];\n\nfunction App() {\n    const [notes, setNotes] = useState(initProds);\n    const[value, setValue] = useState(false);\n    \n\n\n\n    const result = notes.map((elem) => {\n        \n\n\n        return <li>\n            {elem.name}\n            {elem.cost}\n            {value? \"elem.desc\": \"\"}\n            \n           \n            <button onClick = {() => setValue(!value)}>описание</button>\n            <button>отзыв</button>\n        </li>\n    })\n\n    return <div>\n        <ul>\n               {result} \n        </ul>\n\n    </div>\n\n   \n}\n\nexport default App; \n\n\n"]},"metadata":{},"sourceType":"module"}