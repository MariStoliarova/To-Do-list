{"ast":null,"code":"var _jsxFileName = \"/Users/nikitastolarov/Desktop/my-app/src/App.jsx\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [notes, setNotes] = useState([1, 2, 3, 4, 5]);\n  const [editNum, setEditNum] = useState(null);\n  const result = notes.map((note, index) => {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      onClick: () => setEditNum(index),\n      children: note\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 10\n    }, this);\n  });\n\n  function changeItem(event) {\n    setNotes([...notes.slice(0, editNum), event.target.value, ...notes.slice(editNum + 1)]);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [result, /*#__PURE__*/_jsxDEV(\"input\", {\n      value: editNum ? notes[editNum] : '1',\n      onChange: changeItem\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"S7ndi3pSgotrZxwurfY9ENaX1hc=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/nikitastolarov/Desktop/my-app/src/App.jsx"],"names":["React","useState","App","notes","setNotes","editNum","setEditNum","result","map","note","index","changeItem","event","slice","target","value"],"mappings":";;;AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAGA,SAASC,GAAT,GAAe;AAAA;;AAEX,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBH,QAAQ,CAAC,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,CAAD,CAAlC;AACH,QAAM,CAACI,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,IAAD,CAAtC;AAEA,QAAMM,MAAM,GAAGJ,KAAK,CAACK,GAAN,CAAU,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACzC,wBAAO;AAAe,MAAA,OAAO,EAAE,MAAMJ,UAAU,CAACI,KAAD,CAAxC;AAAA,gBACLD;AADK,OAAQC,KAAR;AAAA;AAAA;AAAA;AAAA,YAAP;AAGA,GAJc,CAAf;;AAMA,WAASC,UAAT,CAAoBC,KAApB,EAA2B;AAC1BR,IAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAK,CAACU,KAAN,CAAY,CAAZ,EAAeR,OAAf,CAAJ,EAA6BO,KAAK,CAACE,MAAN,CAAaC,KAA1C,EAAiD,GAAGZ,KAAK,CAACU,KAAN,CAAYR,OAAO,GAAG,CAAtB,CAApD,CAAD,CAAR;AACA;;AAED,sBAAO;AAAA,eACLE,MADK,eAEN;AAAO,MAAA,KAAK,EAAEF,OAAO,GAAGF,KAAK,CAACE,OAAD,CAAR,GAAoB,GAAzC;AAA8C,MAAA,QAAQ,EAAEM;AAAxD;AAAA;AAAA;AAAA;AAAA,YAFM;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAIA;;GAnBQT,G;;KAAAA,G;AAoBT,eAAeA,GAAf","sourcesContent":["import './App.css';\nimport React, { useState } from 'react';\n\n\nfunction App() {\n\n    const [notes, setNotes] = useState([1, 2, 3, 4, 5]);\n\tconst [editNum, setEditNum] = useState(null);\n\t\n\tconst result = notes.map((note, index) => {\n\t\treturn <p key={index} onClick={() => setEditNum(index)}>\n\t\t\t{note}\n\t\t</p>;\n\t});\n\t\n\tfunction changeItem(event) {\n\t\tsetNotes([...notes.slice(0, editNum), event.target.value, ...notes.slice(editNum + 1)]);\n\t}\n\t\n\treturn <div>\n\t\t{result}\n\t\t<input value={editNum ? notes[editNum] : '1'} onChange={changeItem} />\n\t</div>;\n}\nexport default App; \n\n\n\n"]},"metadata":{},"sourceType":"module"}