{"ast":null,"code":"var _jsxFileName = \"/Users/nikitastolarov/Desktop/my-app/src/App.jsx\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport uuid from 'react-uuid';\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [checked, setChecked] = useState(true);\n\n  function old(old18) {\n    if (old18) {\n      /*#__PURE__*/\n      _jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\u0423\\u0440\\u0430, \\u0432\\u0430\\u043C \\u0443\\u0436\\u0435 \\u0435\\u0441\\u0442\\u044C 18\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u0437\\u0434\\u0435\\u0441\\u044C \\u0440\\u0430\\u0441\\u043F\\u043E\\u043B\\u043E\\u0436\\u0435\\u043D \\u043A\\u043E\\u043D\\u0442\\u0435\\u043D\\u0442 \\u0442\\u043E\\u043B\\u044C\\u043A\\u043E \\u0434\\u043B\\u044F \\u0432\\u0437\\u0440\\u043E\\u0441\\u043B\\u044B\\u0445\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 13\n      }, this);\n    } else {\n      /*#__PURE__*/\n      _jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u0443\\u0432\\u044B, \\u0432\\u0430\\u043C \\u0435\\u0449\\u0435 \\u043D\\u0435\\u0442 18 \\u043B\\u0435\\u0442:(\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 13\n      }, this);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      checked: checked,\n      onChange: () => setChecked(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: old(checked)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"aryUgSk0mPG99WIkJyykUON3SzE=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/nikitastolarov/Desktop/my-app/src/App.jsx"],"names":["uuid","React","useState","App","checked","setChecked","old","old18"],"mappings":";;;AAAA,OAAO,WAAP;AACA,OAAOA,IAAP,MAAiB,YAAjB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AAEX,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBH,QAAQ,CAAC,IAAD,CAAtC;;AAEA,WAASI,GAAT,CAAcC,KAAd,EAAqB;AACjB,QAAIA,KAAJ,EAAW;AACP;AAAA;AAAA,gCACQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADR,eAEQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAMH,KAPD,MAOO;AACH;AAAA;AAAA,+BACQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADR;AAAA;AAAA;AAAA;AAAA;AAKH;AAEJ;;AAEJ,sBAAO;AAAA,4BACA;AAAQ,MAAA,IAAI,EAAG,UAAf;AAA0B,MAAA,OAAO,EAAIH,OAArC;AAA8C,MAAA,QAAQ,EAAI,MAAMC,UAAU,CAAC,KAAD;AAA1E;AAAA;AAAA;AAAA;AAAA,YADA,eAEA;AAAA,gBAAIC,GAAG,CAACF,OAAD;AAAP;AAAA;AAAA;AAAA;AAAA,YAFA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAIA;;GA1BQD,G;;KAAAA,G;AA4BT,eAAeA,GAAf","sourcesContent":["import './App.css';\nimport uuid from 'react-uuid'\nimport React, { useState } from 'react';\n\nfunction App() {\n\n    const [checked, setChecked] = useState(true);\n\n    function old (old18) {\n        if (old18) {\n            <div>\n                    <h2>Ура, вам уже есть 18</h2>\n                    <p>\n                        здесь расположен контент только для взрослых\n                    </p>\n            </div>\n        } else {\n            <div>\n                    <p>\n                        увы, вам еще нет 18 лет:(\n                    </p>\n            </div>\n        }\n\n    }\n\n\treturn <div>\n        <input  type = \"checkbox\" checked = {checked} onChange = {() => setChecked(false)}/>\n        <p>{old(checked)}</p>\n    </div>\n}\n\nexport default App; \n\n"]},"metadata":{},"sourceType":"module"}