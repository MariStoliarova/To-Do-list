{"ast":null,"code":"var _jsxFileName = \"/Users/nikitastolarov/Desktop/my-app/src/App.jsx\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport uuid from 'react-uuid';\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [checked, setChecked] = useState(true); // const  [initially, setInitially] = useState(\"видимый\");\n  // const invisible = (() => setInitially(\" \"));\n  // const  visibility = ((checked) => {\n  //        if  (checked) {\n  //              return initially;\n  //        } else {\n  //            return invisible;\n  //        }\n  // })\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      checked: !checked,\n      onChange: () => setChecked(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 8\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 11\n  }, this);\n}\n\n_s(App, \"aryUgSk0mPG99WIkJyykUON3SzE=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/nikitastolarov/Desktop/my-app/src/App.jsx"],"names":["uuid","React","useState","App","checked","setChecked"],"mappings":";;;AAAA,OAAO,WAAP;AACA,OAAOA,IAAP,MAAiB,YAAjB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AAEX,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBH,QAAQ,CAAC,IAAD,CAAtC,CAFW,CAGX;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAKD,sBAAO;AAAA,2BACH;AAAO,MAAA,IAAI,EAAG,UAAd;AAAyB,MAAA,OAAO,EAAI,CAACE,OAArC;AAA8C,MAAA,QAAQ,EAAI,MAAMC,UAAU,CAAC,KAAD;AAA1E;AAAA;AAAA;AAAA;AAAA;AADG;AAAA;AAAA;AAAA;AAAA,UAAP;AAKF;;GAvBQF,G;;KAAAA,G;AA0BT,eAAeA,GAAf","sourcesContent":["import './App.css';\nimport uuid from 'react-uuid'\nimport React, { useState } from 'react';\n\nfunction App() {\n\n    const [checked, setChecked] = useState(true);\n    // const  [initially, setInitially] = useState(\"видимый\");\n\n    // const invisible = (() => setInitially(\" \"));\n    // const  visibility = ((checked) => {\n    //        if  (checked) {\n    //              return initially;\n    //        } else {\n    //            return invisible;\n    //        }\n           \n    // })\n\n\n   \n\n   return <div>\n       <input type = \"checkbox\" checked = {!checked} onChange = {() => setChecked(false)}/>\n       {/* <p>{visibility(checked)}</p> */}\n   </div>\n\t\n}\n\n\nexport default App; \n\n"]},"metadata":{},"sourceType":"module"}