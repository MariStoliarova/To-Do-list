{"ast":null,"code":"var _jsxFileName = \"/Users/nikitastolarov/Desktop/my-app/src/App.jsx\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [obj, setObj] = useState({\n    prop1: 'value1',\n    prop2: 'value2',\n    prop3: 'value3'\n  });\n\n  const copy = () => {\n    Object.assign({}, obj);\n\n    for (let key in copy) {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: copy[key]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 16\n      }, this);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: copy\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 12\n  }, this);\n}\n\n_s(App, \"RIpAqyGQqIyanx5FPP5pOg797N4=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/nikitastolarov/Desktop/my-app/src/App.jsx"],"names":["React","useState","App","obj","setObj","prop1","prop2","prop3","copy","Object","assign","key"],"mappings":";;;AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAGA,SAASC,GAAT,GAAe;AAAA;;AACX,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBH,QAAQ,CAAC;AACjCI,IAAAA,KAAK,EAAE,QAD0B;AAEjCC,IAAAA,KAAK,EAAE,QAF0B;AAGjCC,IAAAA,KAAK,EAAE;AAH0B,GAAD,CAA9B;;AAMA,QAAMC,IAAI,GAAI,MAAM;AAChBC,IAAAA,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBP,GAAlB;;AACJ,SAAK,IAAIQ,GAAT,IAAgBH,IAAhB,EAAsB;AAClB,0BAAO;AAAA,kBAAKA,IAAI,CAACG,GAAD;AAAT;AAAA;AAAA;AAAA;AAAA,cAAP;AACH;AACA,GALD;;AAQA,sBAAO;AAAA,2BACH;AAAA,gBACKH;AADL;AAAA;AAAA;AAAA;AAAA;AADG;AAAA;AAAA;AAAA;AAAA,UAAP;AAKH;;GApBQN,G;;KAAAA,G;AAqBT,eAAeA,GAAf","sourcesContent":["import './App.css';\nimport React, { useState } from 'react';\n\n\nfunction App() {\n    const [obj, setObj] = useState({\n\t\tprop1: 'value1',\n\t\tprop2: 'value2',\n\t\tprop3: 'value3',\n\t});\n\n    const copy = (() => {\n        Object.assign({}, obj);\n    for (let key in copy) {\n        return <li>{copy[key]}</li>\n    }\n    })\n    \n\n    return <div>\n        <ul>\n            {copy}\n        </ul>\n    </div>\n}\nexport default App; \n\n"]},"metadata":{},"sourceType":"module"}