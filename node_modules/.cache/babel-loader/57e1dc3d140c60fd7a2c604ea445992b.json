{"ast":null,"code":"var _jsxFileName = \"/Users/nikitastolarov/Desktop/my-app/src/App.jsx\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport uuid from 'react-uuid';\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [value, setValue] = useState(\" \");\n  const [result, setResult] = useState(\"\");\n\n  const handleChange = event => setValue(event.target.value);\n\n  const amount = num => {\n    let arr = String(num).split(\"\");\n    let sum = 0;\n\n    for (let elem of arr) {\n      sum += Number(elem);\n    }\n\n    return sum;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      value: value,\n      onChange: handleChange,\n      onBlur: () => setResult(amount(value))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"\\u0441\\u0443\\u043C\\u043C\\u0443 \\u0446\\u0438\\u0444\\u0440 \\u0432\\u0432\\u0435\\u0434\\u0435\\u043D\\u043D\\u043E\\u0433\\u043E \\u0447\\u0438\\u0441\\u043B\\u0430: \", result]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 6\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"9Pn2cDntaLNfdYZBSmkEf41F0VI=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/nikitastolarov/Desktop/my-app/src/App.jsx"],"names":["uuid","React","useState","App","value","setValue","result","setResult","handleChange","event","target","amount","num","arr","String","split","sum","elem","Number"],"mappings":";;;AAAA,OAAO,WAAP;AACA,OAAOA,IAAP,MAAiB,YAAjB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AAEd,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBH,QAAQ,CAAE,GAAF,CAAlC;AACA,QAAM,CAAEI,MAAF,EAAUC,SAAV,IAAuBL,QAAQ,CAAC,EAAD,CAArC;;AAEA,QAAMM,YAAY,GAAIC,KAAD,IAAWJ,QAAQ,CAACI,KAAK,CAACC,MAAN,CAAaN,KAAd,CAAxC;;AACA,QAAMO,MAAM,GAAIC,GAAD,IAAS;AACrB,QAAIC,GAAG,GAAGC,MAAM,CAACF,GAAD,CAAN,CAAYG,KAAZ,CAAkB,EAAlB,CAAV;AACA,QAAIC,GAAG,GAAG,CAAV;;AACA,SAAM,IAAIC,IAAV,IAAkBJ,GAAlB,EAAuB;AACnBG,MAAAA,GAAG,IAAIE,MAAM,CAACD,IAAD,CAAb;AACH;;AACD,WAAOD,GAAP;AACF,GAPD;;AASA,sBAAO;AAAA,4BACH;AAAO,MAAA,KAAK,EAAIZ,KAAhB;AAAuB,MAAA,QAAQ,EAAII,YAAnC;AAAiD,MAAA,MAAM,EAAI,MAAMD,SAAS,CAACI,MAAM,CAACP,KAAD,CAAP;AAA1E;AAAA;AAAA;AAAA;AAAA,YADG,eAEH;AAAA,0KAAiCE,MAAjC;AAAA;AAAA;AAAA;AAAA;AAAA,YAFG;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAKA;;GApBQH,G;;KAAAA,G;AAsBT,eAAeA,GAAf","sourcesContent":["import './App.css';\nimport uuid from 'react-uuid'\nimport React, { useState } from 'react';\n\nfunction App() {\n\n const [value, setValue] = useState (\" \");\n const [ result, setResult] = useState(\"\");\n\n const handleChange = (event) => setValue(event.target.value);\n const amount = (num) => {\n    let arr = String(num).split(\"\");\n    let sum = 0;\n    for ( let elem of arr) {\n        sum += Number(elem)\n    }\n    return sum;\n }\n\n return <div>\n     <input value = {value} onChange = {handleChange} onBlur = {() => setResult(amount(value))}/>\n     <p>сумму цифр введенного числа: {result}</p>\n </div>\n\n}\n\nexport default App; \n\n"]},"metadata":{},"sourceType":"module"}