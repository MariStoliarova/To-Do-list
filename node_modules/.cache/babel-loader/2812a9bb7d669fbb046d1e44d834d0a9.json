{"ast":null,"code":"var _jsxFileName = \"/Users/nikitastolarov/Desktop/my-app/src/App.jsx\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [notes, setNotes] = useState([1, 2, 3, 4, 5]);\n\n  const changeHandler = (index, event) => {\n    setNotes([...notes.slice(0, index), event.target.value, ...notes.slice(index + 1)]);\n  };\n\n  const average = arr => {\n    let sum = 0;\n    let result;\n\n    for (let elem of arr) {\n      result = (sum += +elem) / arr.length;\n    }\n\n    return result;\n  };\n\n  const map = notes.map((elem, index) => {\n    return /*#__PURE__*/_jsxDEV(\"input\", {\n      value: elem,\n      onChange: event => changeHandler(index, event)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 12\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [map, /*#__PURE__*/_jsxDEV(\"p\", {\n      children: average(notes)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 8\n  }, this);\n}\n\n_s(App, \"q5SteI6uaDwCkbtRrmAE5iZYrxY=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/nikitastolarov/Desktop/my-app/src/App.jsx"],"names":["React","useState","App","notes","setNotes","changeHandler","index","event","slice","target","value","average","arr","sum","result","elem","length","map"],"mappings":";;;AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAGA,SAASC,GAAT,GAAe;AAAA;;AACf,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBH,QAAQ,CAAC,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,CAAD,CAAlC;;AAEC,QAAMI,aAAa,GAAI,CAACC,KAAD,EAAQC,KAAR,KAAkB;AACtCH,IAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAK,CAACK,KAAN,CAAY,CAAZ,EAAeF,KAAf,CAAJ,EAA2BC,KAAK,CAACE,MAAN,CAAaC,KAAxC,EAA+C,GAAGP,KAAK,CAACK,KAAN,CAAYF,KAAK,GAAG,CAApB,CAAlD,CAAD,CAAR;AACH,GAFA;;AAID,QAAMK,OAAO,GAAKC,GAAD,IAAS;AACtB,QAAIC,GAAG,GAAG,CAAV;AACA,QAAIC,MAAJ;;AACA,SAAK,IAAIC,IAAT,IAAiBH,GAAjB,EAAsB;AAErBE,MAAAA,MAAM,GAAG,CAACD,GAAG,IAAI,CAAEE,IAAV,IAAiBH,GAAG,CAACI,MAA9B;AACA;;AACD,WAAOF,MAAP;AACH,GARD;;AAYA,QAAMG,GAAG,GAAGd,KAAK,CAACc,GAAN,CAAU,CAACF,IAAD,EAAOT,KAAP,KAAiB;AACnC,wBAAO;AAAqB,MAAA,KAAK,EAAIS,IAA9B;AAAoC,MAAA,QAAQ,EAAKR,KAAD,IAAWF,aAAa,CAACC,KAAD,EAAQC,KAAR;AAAxE,OAAcD,KAAd;AAAA;AAAA;AAAA;AAAA,YAAP;AACH,GAFW,CAAZ;AAIA,sBAAO;AAAA,eACHW,GADG,eAEJ;AAAA,gBAAIN,OAAO,CAACR,KAAD;AAAX;AAAA;AAAA;AAAA;AAAA,YAFI;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAKC;;GA5BQD,G;;KAAAA,G;AA6BT,eAAeA,GAAf","sourcesContent":["import './App.css';\nimport React, { useState } from 'react';\n\n\nfunction App() {\nconst [notes, setNotes] = useState([1, 2, 3, 4, 5]);\n\n const changeHandler = ((index, event) => {\n    setNotes([...notes.slice(0, index), event.target.value, ...notes.slice(index + 1)]);\n})\n\nconst average = ((arr) => {\n    let sum = 0;\n    let result;\n    for (let elem of arr) {\n        \n     result = (sum += +(elem))/arr.length;\n    }\n    return result;\n})\n\n\n\nconst map = notes.map((elem, index) => {\n    return <input key = {index} value = {elem} onChange = {(event) => changeHandler(index, event)}/>\n})\n\nreturn <div>\n   {map}\n   <p>{average(notes)}</p>\n</div>\n\n}\nexport default App; \n\n\n\n"]},"metadata":{},"sourceType":"module"}