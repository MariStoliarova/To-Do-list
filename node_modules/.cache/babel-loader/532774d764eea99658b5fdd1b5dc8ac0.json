{"ast":null,"code":"var _jsxFileName = \"/Users/nikitastolarov/Desktop/my-app/src/App.jsx\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [notes, setNotes] = useState([1, 2, 3]);\n\n  function changeHandler(index, event) {\n    setNotes([...notes.slice(0, index), event.target.value, ...notes.slice(index + 1)]); // [2,3], input, [2,3]\n  }\n\n  console.log([...notes.slice(0, index), event.target.value, ...notes.slice(index + 1)]); //])\n\n  function getSum(arr) {\n    let sum = 0;\n\n    for (const elem of arr) {\n      sum += +elem;\n    }\n\n    return sum;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      value: notes[0],\n      onChange: event => changeHandler(0, event)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: notes[1],\n      onChange: event => changeHandler(1, event)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: notes[2],\n      onChange: event => changeHandler(2, event)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 3\n    }, this), getSum(notes)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"IBNCcK+KC9YcgojM5ewWYO22CdQ=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/nikitastolarov/Desktop/my-app/src/App.jsx"],"names":["React","useState","App","notes","setNotes","changeHandler","index","event","slice","target","value","console","log","getSum","arr","sum","elem"],"mappings":";;;AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAGA,SAASC,GAAT,GAAe;AAAA;;AACX,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBH,QAAQ,CAAC,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAD,CAAlC;;AAEH,WAASI,aAAT,CAAuBC,KAAvB,EAA8BC,KAA9B,EAAqC;AACpCH,IAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAK,CAACK,KAAN,CAAY,CAAZ,EAAeF,KAAf,CAAJ,EAA2BC,KAAK,CAACE,MAAN,CAAaC,KAAxC,EAA+C,GAAGP,KAAK,CAACK,KAAN,CAAYF,KAAK,GAAG,CAApB,CAAlD,CAAD,CAAR,CADoC,CACgD;AACpF;;AACEK,EAAAA,OAAO,CAACC,GAAR,CAAY,CAAC,GAAGT,KAAK,CAACK,KAAN,CAAY,CAAZ,EAAeF,KAAf,CAAJ,EAA2BC,KAAK,CAACE,MAAN,CAAaC,KAAxC,EAA+C,GAAGP,KAAK,CAACK,KAAN,CAAYF,KAAK,GAAG,CAApB,CAAlD,CAAZ,EANW,CAM4E;;AAEvF,WAASO,MAAT,CAAgBC,GAAhB,EAAqB;AACjB,QAAIC,GAAG,GAAG,CAAV;;AAEA,SAAK,MAAMC,IAAX,IAAmBF,GAAnB,EAAwB;AACpBC,MAAAA,GAAG,IAAI,CAACC,IAAR;AACH;;AAED,WAAOD,GAAP;AACH;;AAEJ,sBAAO;AAAA,4BACN;AAAO,MAAA,KAAK,EAAEZ,KAAK,CAAC,CAAD,CAAnB;AAAwB,MAAA,QAAQ,EAAEI,KAAK,IAAIF,aAAa,CAAC,CAAD,EAAIE,KAAJ;AAAxD;AAAA;AAAA;AAAA;AAAA,YADM,eAEN;AAAO,MAAA,KAAK,EAAEJ,KAAK,CAAC,CAAD,CAAnB;AAAwB,MAAA,QAAQ,EAAEI,KAAK,IAAIF,aAAa,CAAC,CAAD,EAAIE,KAAJ;AAAxD;AAAA;AAAA;AAAA;AAAA,YAFM,eAGN;AAAO,MAAA,KAAK,EAAEJ,KAAK,CAAC,CAAD,CAAnB;AAAwB,MAAA,QAAQ,EAAEI,KAAK,IAAIF,aAAa,CAAC,CAAD,EAAIE,KAAJ;AAAxD;AAAA;AAAA;AAAA;AAAA,YAHM,EAKLM,MAAM,CAACV,KAAD,CALD;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAQA;;GA1BQD,G;;KAAAA,G;AA2BT,eAAeA,GAAf","sourcesContent":["import './App.css';\nimport React, { useState } from 'react';\n\n\nfunction App() {\n    const [notes, setNotes] = useState([1, 2, 3]);\n\t\n\tfunction changeHandler(index, event) {\n\t\tsetNotes([...notes.slice(0, index), event.target.value, ...notes.slice(index + 1)]);// [2,3], input, [2,3]\n\t}\n    console.log([...notes.slice(0, index), event.target.value, ...notes.slice(index + 1)]);//])\n\n    function getSum(arr) {\n        let sum = 0;\n        \n        for (const elem of arr) {\n            sum += +elem;\n        }\n        \n        return sum;\n    }\n\t\n\treturn <div>\n\t\t<input value={notes[0]} onChange={event => changeHandler(0, event)} />\n\t\t<input value={notes[1]} onChange={event => changeHandler(1, event)} />\n\t\t<input value={notes[2]} onChange={event => changeHandler(2, event)} />\n\t\t\n\t\t{getSum(notes)}\n\t</div>;\n\n}\nexport default App; \n\n\n\n"]},"metadata":{},"sourceType":"module"}